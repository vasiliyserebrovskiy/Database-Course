Подробное описание заданий по MongoDB с теорией

Простые задания (1-15)
1. Создание базы данных
Теория: В MongoDB база данных создается автоматически при первом обращении к ней.
 Используется команда use <database_name>. 
 Задание: Создайте новую базу данных с названием shop.

2. Создание коллекции
Теория: В MongoDB коллекции создаются автоматически при добавлении первого документа.
Однако можно создать коллекцию явно с помощью db.createCollection(). 
Задание: В базе данных shop создайте коллекцию products.

3. Добавление одного документа
Теория: Документы в MongoDB представляют собой JSON-подобные объекты. 
Добавление выполняется командой insertOne(). 
Задание: Добавьте в коллекцию products один товар с полями name, price и category.

4. Добавление нескольких документов
Теория: Можно вставлять несколько документов сразу с помощью insertMany(). 
Задание: Добавьте в products несколько товаров одновременно.

5. Вывод всех товаров
Теория: Для получения всех документов используется find(). 
Задание: Получите список всех товаров из products.

6. Поиск товара по названию
Теория: findOne() позволяет найти первый документ, соответствующий критерию. 
Задание: Найдите товар с name: "Phone".

7. Фильтрация товаров по цене
Теория: Операторы сравнения ($gt, $lt и др.) используются для фильтрации данных. 
Задание: Найдите все товары, где price > 600.

8. Обновление данных товара
Теория: Метод updateOne() обновляет один документ. 
Задание: Обновите цену товара "Laptop" на 1300.

9. Удаление одного товара
Теория: deleteOne() удаляет один документ, соответствующий условию. 
Задание: Удалите товар "Tablet".

10. Удаление товаров по условию
Теория: deleteMany() удаляет все документы, соответствующие условию. 
Задание: Удалите все товары с price < 600.

11. Создание индекса
Теория: Индексы ускоряют поиск. Используется createIndex(). 
Задание: Создайте индекс для name.

12. Подсчет количества товаров
Теория: countDocuments() подсчитывает количество документов в коллекции. 
Задание: Определите количество товаров в products.

13. Поиск товаров в ценовом диапазоне
Теория: Операторы $gte и $lte используются для поиска по диапазону. 
Задание: Найдите товары с price от 600 до 1000.

14. Фильтрация по категории
Теория: Поиск по значению поля осуществляется с помощью find(). 
Задание: Найдите все товары категории "Electronics".

15. Добавление нового поля ко всем товарам
Теория: updateMany() позволяет обновлять сразу несколько документов. 
Задание: Добавьте поле stock: 50 ко всем товарам.

Средние задания (16-30)
16. Добавление товара с вложенным документом
Теория: В MongoDB можно хранить вложенные объекты. 
Задание: Добавьте товар с полем details, содержащим brand и model.

17. Поиск товаров с определенным полем
Теория: Оператор $exists используется для проверки наличия поля. 
Задание: Найдите товары, содержащие details.

18. Массовое обновление цен
Теория: $mul позволяет умножать числовые значения в updateMany(). 
Задание: Увеличьте цену всех товаров на 10%.

19. Добавление массива в товары
Теория: Массивы в MongoDB представляют собой списки значений. 
Задание: Добавьте поле reviews, содержащее первый отзыв.

20. Добавление отзыва в массив
Теория: $push добавляет элемент в массив. 
Задание: Добавьте отзыв к Laptop в reviews.

21. Поиск товаров с определенным рейтингом
Теория: Используйте $elemMatch для поиска в массивах. 
Задание: Найдите товары с отзывами, содержащими рейтинг 5.

22. Удаление вложенных данных
Теория: $unset удаляет поле из документа. 
Задание: Удалите все отзывы у Laptop.

23. Создание новой коллекции и добавление данных
Теория: Коллекции создаются автоматически при вставке данных. 
Задание: Создайте orders и добавьте заказ.

24. Обновление данных в коллекции заказов
Теория: updateOne() обновляет документы. 
Задание: Обновите статус заказа с "Pending" на "Shipped".

25. Подсчет заказов по статусу
Теория: countDocuments() применяется для фильтрации. 
Задание: Подсчитайте заказы со статусом "Shipped".

26. Удаление заказов с определенными товарами
Теория: deleteMany() удаляет документы по условию. 
Задание: Удалите заказы с товаром "Phone".

27. Создание связи между заказами и пользователями
Теория: В MongoDB можно хранить идентификаторы связанных документов. 
Задание: Добавьте пользователя в users и обновите заказы, добавив user_id.

28. Объединение данных из двух коллекций
Теория: $lookup позволяет объединять документы из разных коллекций. 
Задание: Выполните агрегирование для вывода заказов с пользователями.

29. Сортировка товаров по цене
Теория: Метод sort() сортирует результаты запроса. 
Задание: Найдите товары с price > 1000, отсортируйте по убыванию.

30. Создание уникального индекса
Теория: Индексы предотвращают дублирование данных. 
Задание: Создайте уникальный индекс на поле email в customers.