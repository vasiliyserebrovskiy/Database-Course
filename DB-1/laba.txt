1. Создание пользователя
Создай нового пользователя PostgreSQL с именем maria и паролем secure123.

	CREATE USER 
		maria
 	WITH PASSWORD 'secure123';

2. Создание базы данных
Создай базу данных college_db, владельцем которой будет пользователь maria.

	CREATE DATABASE college_db OWNER maria;

3. Создание таблицы
Создай таблицу students с полями:

id — автоинкремент,

name — строка до 80 символов,

age — целое число,

hobby — строка до 80 символов.

	CREATE TABLE students (
	  id serial PRIMARY KEY,
	  name varchar(80),
	  age integer,
	  hobby varchar(80)
	);

4. Вставка нескольких строк
Добавь в таблицу students следующих студентов:

Timur, 25, chess

Diana, 34, painting

Maria, 22, dance

	INSERT INTO students (name, age, hobby) VALUES
		('Timur', 25, 'chess'),
		('Diana', 34, 'painting'),
		('Maria', 22, 'dance');


5. Выборка всех имён и хобби
Выведи имена и увлечения всех студентов.

	SELECT name, hobby FROM students;

6. Фильтрация по возрасту
Выведи имена всех студентов, чей возраст меньше 30 лет.

	SELECT name FROM students WHERE age < 30;

7. Удаление всех записей
Удалить всех студентов из таблицы.

	TRUNCATE TABLE students;

8. Удаление по условию (OR)
Удалить всех студентов, чей возраст равен 50 или чьё хобби — chess.

	DELETE FROM students WHERE age = 50 OR hobby = 'chess';

9. Удаление по условию (AND)
Удалить студентов, у которых хобби dance и возраст больше 25 лет.

	DELETE FROM students WHERE hobby = 'dance' AND age > 25;

10. Сортировка по возрасту
Выведи имена и возраст всех студентов, отсортированных по убыванию возраста.

	SELECT name, age FROM students ORDER BY age DESC;

11. Вставка одной строки
Добавь в таблицу студента Sergey, 50 лет, хобби — гитара.

	INSERT INTO students (name, age, hobby) VALUES ('Sergey', 50, 'guitar');

12. Обновление возраста
Измени возраст студента по имени Maria на 23 года.

	UPDATE students
	 SET age = 23
	 WHERE name = 'Maria';

13. Удаление по хобби
Удалить всех студентов, увлекающихся рисованием.

	DELETE FROM students WHERE hobby = 'painting';

14. Выборка уникальных хобби
Выведи список уникальных увлечений (без повторов).

	SELECT DISTINCT hobby FROM students;

15. Подсчёт количества студентов
Сколько студентов сейчас в таблице?

	SELECT COUNT(*) AS total_students FROM students;